{"code":"import { createHistoryEvnent } from '../utils/pv';\r\nimport { TrackerConfig } from '../types/index';\r\nvar Tracker = /** @class */ (function () {\r\n    function Tracker(options) {\r\n        this.data = Object.assign(this.initDef(), options);\r\n        this.installTracker();\r\n    }\r\n    Tracker.prototype.initDef = function () {\r\n        window.history['pushState'] = createHistoryEvnent('pushState');\r\n        window.history['replaceState'] = createHistoryEvnent('replaceState');\r\n        return {\r\n            sdkVersion: TrackerConfig.version,\r\n            historyTracker: false,\r\n            hashTracker: false,\r\n            domTracker: false,\r\n            jsError: false\r\n        };\r\n    };\r\n    Tracker.prototype.sendTracker = function (data) {\r\n        this.reportTracker(data);\r\n    };\r\n    Tracker.prototype.setUserId = function (uuid) {\r\n        this.data.uuid = uuid;\r\n    };\r\n    Tracker.prototype.setEtra = function (extra) {\r\n        this.data.extra = extra;\r\n    };\r\n    Tracker.prototype.captrueEvents = function (mouseEventList, targetKey, data) {\r\n        var _this = this;\r\n        mouseEventList.forEach(function (event) {\r\n            window.addEventListener(event, function () {\r\n                console.log('监听到了');\r\n                _this.reportTracker({\r\n                    event: event,\r\n                    targetKey: targetKey,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n    Tracker.prototype.installTracker = function () {\r\n        if (this.data.historyTracker) {\r\n            this.captrueEvents(['pushState', 'replaceState', 'popstate'], 'history-pv');\r\n        }\r\n        if (this.data.hashTracker) {\r\n            this.captrueEvents(['hashchange'], 'history-pv');\r\n        }\r\n    };\r\n    Tracker.prototype.reportTracker = function (data) {\r\n        var params = Object.assign(this.data, { time: new Date().getTime() });\r\n        var headers = {\r\n            type: 'application/x-wwww-format-urlencoded'\r\n        };\r\n        var blob = new Blob([JSON.stringify(params)], headers);\r\n        navigator.sendBeacon(this.data.requestUrl, blob);\r\n    };\r\n    return Tracker;\r\n}());\r\nexport default Tracker;\r\n","references":["D:/monitor/src/utils/pv.ts","D:/monitor/src/types/index.ts"]}
